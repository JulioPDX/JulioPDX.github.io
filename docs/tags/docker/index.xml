<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Welcome to the World of Tomorrow</title>
    <link>https://juliopdx.com/tags/docker/</link>
    <description>Recent content in Docker on Welcome to the World of Tomorrow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 25 Feb 2022 15:06:14 -0800</lastBuildDate><atom:link href="https://juliopdx.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ExaBGP in the Lab</title>
      <link>https://juliopdx.com/2022/02/25/exabgp-in-the-lab/</link>
      <pubDate>Fri, 25 Feb 2022 15:06:14 -0800</pubDate>
      
      <guid>https://juliopdx.com/2022/02/25/exabgp-in-the-lab/</guid>
      <description>Intro I was recently working my way through Optimal Routing design by Cisco Press&amp;hellip; Can you tell that I get through books very slowly? I&amp;rsquo;ve probably used that sentence in my blog posts three or four times now! Either way, this chapter focused on scaling BGP and dealing with external connections. The section that really got me was external connections. The books goes over a lot, for example, handling inbound traffic, outbound traffic, full routes vs partial vs default.</description>
    </item>
    
    <item>
      <title>Network Simulation Tools and Containerlab</title>
      <link>https://juliopdx.com/2022/02/13/network-simulation-tools-and-containerlab/</link>
      <pubDate>Sun, 13 Feb 2022 21:07:43 -0800</pubDate>
      
      <guid>https://juliopdx.com/2022/02/13/network-simulation-tools-and-containerlab/</guid>
      <description>Introduction I&amp;rsquo;ve been progressing through a series of technical books, some of which I&amp;rsquo;ve shared on other blogs. A few of them focus on BGP. BGP being so broad, I decided to create a challenge lab. Creating the challenge/troubleshooting labs has really made more concepts stick. I&amp;rsquo;m trying to use the principle of teaching someone to make the learning last. These have been incredibly fun to create and the community interaction has been amazing.</description>
    </item>
    
    <item>
      <title>My Journey and Experience With Containerlab</title>
      <link>https://juliopdx.com/2021/12/10/my-journey-and-experience-with-containerlab/</link>
      <pubDate>Fri, 10 Dec 2021 14:32:22 -0800</pubDate>
      
      <guid>https://juliopdx.com/2021/12/10/my-journey-and-experience-with-containerlab/</guid>
      <description>Introduction Thank you all for checking out this post. This is going to be a special one. Due to the fact that I had such a joy using this new tool (new to me). I don’t like to over hype tools or new things just to hype it up. There are times where a tool or technology does deserve the credit and time in the limelight. I think Containerlabs is one of those tools.</description>
    </item>
    
    <item>
      <title>Building a Network CI/CD Pipeline Part 3</title>
      <link>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-3/</link>
      <pubDate>Wed, 20 Oct 2021 11:05:49 -0800</pubDate>
      
      <guid>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-3/</guid>
      <description>Introduction Thank you for checking out part three in this series, it really means a lot! So far we have installed Docker on an Ubuntu host machine and the Drone server/runners. In this post we will go over the .drone.yml file and why I decided to create my first Docker container image. Stick around after the break…. who am I kidding there is no break, what is this an infomercial?</description>
    </item>
    
    <item>
      <title>Building a Network CI/CD Pipeline Part 2</title>
      <link>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-2/</link>
      <pubDate>Wed, 20 Oct 2021 10:41:26 -0800</pubDate>
      
      <guid>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-2/</guid>
      <description>Introduction Thank you for checking out part two of this series. The last post went through installing docker on an Ubuntu server to begin our journey to building a CI/CD pipeline. In this post it will be all about connecting Drone to our code repository, in this case GitHub. From our reference diagram below, we will be focusing on the connections from GitHub to the Drone runners.
The Pipeline Server and Runners Now that we have docker installed, we need something to test our code or execute it.</description>
    </item>
    
    <item>
      <title>Building a Network CI/CD Pipeline Part 1</title>
      <link>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-1/</link>
      <pubDate>Wed, 20 Oct 2021 10:26:36 -0800</pubDate>
      
      <guid>https://juliopdx.com/2021/10/20/building-a-network-ci/cd-pipeline-part-1/</guid>
      <description>Introduction Hello all and thank you for joining me on another blog post! In this post or series of posts I hope to walk you through my journey on building a network CI/CD pipeline. This pipeline is not perfect and I’m sure there’s much more efficient ways to produce the same outcomes. I did make the choice to leave out a few things as the technologies involved and complexity kept growing.</description>
    </item>
    
  </channel>
</rss>
